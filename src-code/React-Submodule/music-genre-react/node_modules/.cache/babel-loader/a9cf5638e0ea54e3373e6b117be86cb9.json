{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\facerecognitionBrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Rank from './components/Rank/Rank.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Signin from './components/Signin/Signin.js';\nimport Register from './components/Register/Register.js';\nimport axios from 'axios';\nconst app = new Clarifai.App({\n  apiKey: '33459437c7c44126a88345158ebd1e27'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        rightCol: width - clarifaiFace.right_col * width,\n        topRow: clarifaiFace.top_row * height,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict({\n        id: 'd02b4508df58432fbb84e800597b8959'\n      }, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err)); // we can also do .then for response and then .catch for error\n    };\n\n    this.onRouteChange = page => {\n      this.setState({\n        route: page\n      });\n    };\n\n    this.onFileChange = event => {\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n      console.log(event.target.files[0]);\n    };\n\n    this.onFileUpload = () => {\n      const formData = new FormData(); // Update the formData object\n      // key value(file) filename\n\n      formData.append(\"myfile\", this.state.selectedFile, this.state.selectedFile.name);\n      console.log(this.state.selectedFile, this.selectedFile.name);\n      console.log(formData['myfil']); //post request made to the backend api\n      //send formData object through axios\n\n      axios.post(\"http://localhost:4000/uploadfile\", formData);\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      selectedFile: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particle-canvas\",\n        params: {\n          particles: {\n            number: {\n              value: 100,\n              density: {\n                enable: true,\n                value_area: 800\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this) : this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: this.onFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.onFileUpload,\n            children: \"Upload!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onSubmit: this.onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          className: \"center\",\n          imageUrl: this.state.imageUrl,\n          Box: this.state.box\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/* (on line-70 we are returning the sigin page if route is signin else\n     the homepage will be returned.*/\n\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/facerecognitionBrain/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Particles","Clarifai","Signin","Register","axios","app","App","apiKey","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","rightCol","right_col","topRow","top_row","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","value","onSubmit","imageUrl","state","models","predict","id","then","response","catch","err","console","log","onRouteChange","page","route","onFileChange","selectedFile","files","onFileUpload","formData","FormData","append","name","post","render","particles","number","density","enable","value_area"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation.js'\nimport Logo from './components/Logo/Logo.js'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js'\nimport Rank from './components/Rank/Rank.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Signin from './components/Signin/Signin.js'\nimport Register from './components/Register/Register.js'\nimport axios from 'axios';\n\nconst app = new Clarifai.App({\n apiKey: '33459437c7c44126a88345158ebd1e27'\n});\n\n \nclass  App extends Component {\n  constructor(){\n    super();\n    this.state={\n      input:'',\n      imageUrl:'',\n      box:{},\n      route:'signin',\n      selectedFile:null\n    }\n  }\n  calculateFaceLocation=(data)=>{\n   const clarifaiFace=data.outputs[0].data.regions[0].region_info.bounding_box;\n   const image=document.getElementById('inputImage');\n   const width=Number(image.width);\n   const height=Number(image.height);\n   return {\n    leftCol:(clarifaiFace.left_col)*width,\n    rightCol:width-(clarifaiFace.right_col)*width,\n    topRow:(clarifaiFace.top_row)*height,\n    bottomRow:height-(clarifaiFace.bottom_row)*height,\n   }\n  }\n  displayFaceBox=(box)=>{\n    this.setState({box:box});\n  } \n  onInputChange=(event)=>{\n    this.setState({input:event.target.value});\n  }\n  onSubmit=()=>{\n    this.setState({imageUrl:this.state.input});\n    app.models.predict({id:'d02b4508df58432fbb84e800597b8959'},this.state.input)\n    .then(response=>this.displayFaceBox(this.calculateFaceLocation(response))).catch(err=>console.log(err));\n      // we can also do .then for response and then .catch for error\n  }\n  onRouteChange=(page)=>{\n    this.setState({route:page});\n  }\n  onFileChange=(event)=>{\n    this.setState({selectedFile:event.target.files[0]});\n    console.log(event.target.files[0]);\n  }\n  onFileUpload=()=>{\n    const formData=new FormData();\n\n    // Update the formData object\n    // key value(file) filename\n    formData.append(\"myfile\",this.state.selectedFile,this.state.selectedFile.name);\n    console.log(this.state.selectedFile,this.selectedFile.name);\n    console.log(formData['myfil']);\n    //post request made to the backend api\n    //send formData object through axios\n    axios.post(\"http://localhost:4000/uploadfile\",formData);\n\n  }\n  render(){\n    return (\n      <div className=\"App\">\n\n        <Particles className='particle-canvas'\n              params={{\n                particles: {\n                  number:{\n                    value:100,\n                    density:{\n                      enable:true,\n                      value_area:800\n                    }\n                  }\n                }\n              }}\n            />\n\n        {(this.state.route==='signin')?\n          <Signin onRouteChange={this.onRouteChange}/>\n        :(this.state.route==='home')?\n          <div>\n            <Navigation onRouteChange={this.onRouteChange}  />\n            <Logo />\n            <Rank />\n            <div>\n              <input type='file' onChange={this.onFileChange}/>\n              <button onClick={this.onFileUpload}>Upload!</button>\n            </div>\n            <ImageLinkForm onInputChange={this.onInputChange} onSubmit={this.onSubmit}/>\n            <FaceRecognition  className='center' imageUrl={this.state.imageUrl} Box={this.state.box}/>\n          </div>\n          :\n          <Register onRouteChange={this.onRouteChange}/>\n        }\n     \n      </div>\n    );\n  }\n}\n /* (on line-70 we are returning the sigin page if route is signin else\n      the homepage will be returned.*/\nexport default App;\n"]},"metadata":{},"sourceType":"module"}